WITH 

BASE AS (
  SELECT 
    CED.*
  FROM ANALYTICS.SIGMA_WRITE.CONTRACT_EXECUTION_DATASET CED
  WHERE 1=1    
    AND WITHIN_CONTRACT_DATES = TRUE  -- REMOVES LOADS THAT ARE NOT COUNTED IN EXECUTION SCORES
    AND (
    CASE 
      WHEN {{ Pickup-Date-Controller }}:start IS NOT NULL 
      AND {{ Pickup-Date-Controller }}:end IS NOT NULL 
      THEN PICKUP_DATE:: DATE >= {{ Pickup-Date-Controller }}:start :: TIMESTAMP :: DATE 
      AND PICKUP_DATE:: DATE <= {{ Pickup-Date-Controller }}:end :: TIMESTAMP :: DATE END  -- FOR DATES 'BETWEEN'
    OR CASE 
      WHEN {{ Pickup-Date-Controller }}:start IS NULL 
      AND {{ Pickup-Date-Controller }}:end IS NOT NULL 
      THEN PICKUP_DATE:: DATE <= {{ Pickup-Date-Controller }}:end :: TIMESTAMP :: DATE END  -- FOR DATES 'BEFORE'
    OR CASE 
      WHEN {{ Pickup-Date-Controller }}:start IS NOT NULL 
      AND {{ Pickup-Date-Controller }}:end IS NULL 
      THEN PICKUP_DATE:: DATE >= {{ Pickup-Date-Controller }}:start :: TIMESTAMP :: DATE END  -- FOR DATES 'AFTER'
    )
),

BASECALCS AS (
  SELECT
     CONTRACT_KEY
    ,S_NUMBER
    ,PICKUP_DATE
    ,VOLUME
    ,FREQUENCY
    ,EFFECTIVE_CONTRACT_START_DATE
    ,EFFECTIVE_CONTRACT_END_DATE
    -- ,CEIL(MONTHS_BETWEEN(EFFECTIVE_CONTRACT_END_DATE, EFFECTIVE_CONTRACT_START_DATE), 0) AS COUNT_OF_MONTHS
    -- ,CEIL(DATEDIFF(WEEK, EFFECTIVE_CONTRACT_START_DATE, EFFECTIVE_CONTRACT_END_DATE), 0) AS COUNT_OF_WEEKS
    ,SCHEDULED_CONTRACT_START_DATE
    ,SCHEDULED_CONTRACT_END_DATE
    ,CEIL(DATEDIFF(WEEK, SCHEDULED_CONTRACT_START_DATE, SCHEDULED_CONTRACT_END_DATE), 0) AS COUNT_OF_WEEKS -- COUNT_OF_SCHEDULED_WEEKS
    ,CEIL(MONTHS_BETWEEN(SCHEDULED_CONTRACT_END_DATE, SCHEDULED_CONTRACT_START_DATE), 0) AS COUNT_OF_MONTHS -- COUNT_OF_SCHEDULED_MONTHS
    ,DAY(PICKUP_DATE) AS DAY_OF_PICKUPDATE
    ,WEEK(PICKUP_DATE) AS WEEK_OF_PICKUPDATE
    ,MONTH(PICKUP_DATE) AS MONTH_OF_PICKUPDATE
    ,YEAR(PICKUP_DATE) AS YEAR_OF_PICKUPDATE
    ,OTP
    ,OTD

--TOTAL
    ,COUNT(S_NUMBER) OVER (PARTITION BY CONTRACT_KEY) AS TOTAL_LOADS_TOTAL
    ,COUNT_IF(CONTRACT_CARRIER_FULFILLED = TRUE) OVER (PARTITION BY CONTRACT_KEY) AS EXECUTED_LOADS_TOTAL
    ,COUNT_IF(CONTRACT_CARRIER_FULFILLED = FALSE) OVER (PARTITION BY CONTRACT_KEY) AS MISSED_LOADS_TOTAL

--DAILY
    ,COUNT(S_NUMBER) OVER (PARTITION BY CONTRACT_KEY, DAY_OF_PICKUPDATE, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS TOTAL_LOADS_DAILY
    ,COUNT_IF(CONTRACT_CARRIER_FULFILLED = TRUE) OVER (PARTITION BY CONTRACT_KEY, DAY_OF_PICKUPDATE, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS EXECUTED_LOADS_DAILY
    ,COUNT_IF(CONTRACT_CARRIER_FULFILLED = FALSE) OVER (PARTITION BY CONTRACT_KEY, DAY_OF_PICKUPDATE, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS MISSED_LOADS_DAILY
    ,SUM(REVENUE) OVER (PARTITION BY CONTRACT_KEY, DAY_OF_PICKUPDATE, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS TOTAL_REVENUE_DAILY
    ,SUM(CASE WHEN CONTRACT_CARRIER_FULFILLED = TRUE THEN REVENUE END) OVER (PARTITION BY CONTRACT_KEY, DAY_OF_PICKUPDATE, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS EXECUTED_REVENUE_DAILY
    ,SUM(CASE WHEN CONTRACT_CARRIER_FULFILLED = FALSE THEN REVENUE END) OVER (PARTITION BY CONTRACT_KEY, DAY_OF_PICKUPDATE, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS MISSED_REVENUE_DAILY
    ,SUM(GP) OVER (PARTITION BY CONTRACT_KEY, DAY_OF_PICKUPDATE, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS TOTAL_GP_DAILY
    ,SUM(CASE WHEN CONTRACT_CARRIER_FULFILLED = TRUE THEN GP END) OVER (PARTITION BY CONTRACT_KEY, DAY_OF_PICKUPDATE, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS EXECUTED_GP_DAILY
    ,SUM(CASE WHEN CONTRACT_CARRIER_FULFILLED = FALSE THEN GP END) OVER (PARTITION BY CONTRACT_KEY, DAY_OF_PICKUPDATE, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS MISSED_GP_DAILY
    ,COUNT_IF(CONTRACT_CARRIER_FULFILLED = TRUE AND OTP = TRUE) OVER (PARTITION BY CONTRACT_KEY, DAY_OF_PICKUPDATE, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS OTP_DAILY
    ,COUNT_IF(CONTRACT_CARRIER_FULFILLED = TRUE AND OTD = TRUE) OVER (PARTITION BY CONTRACT_KEY, DAY_OF_PICKUPDATE, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS OTD_DAILY
    ,CASE
      WHEN FREQUENCY = 'Daily' AND TOTAL_LOADS_DAILY > VOLUME THEN DIV0(EXECUTED_LOADS_DAILY, VOLUME)
      WHEN FREQUENCY = 'Daily' THEN DIV0(EXECUTED_LOADS_DAILY, TOTAL_LOADS_DAILY)
      ELSE NULL
      END AS PS_D
    ,CASE WHEN PS_D > 1 THEN 1 ELSE PS_D END AS DAILY_PERFORMANCE_SCORE

--WEEKLY
    ,COUNT(S_NUMBER) OVER (PARTITION BY CONTRACT_KEY, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS TOTAL_LOADS_WEEKLY
    ,COUNT_IF(CONTRACT_CARRIER_FULFILLED = TRUE) OVER (PARTITION BY CONTRACT_KEY, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS EXECUTED_LOADS_WEEKLY
    ,COUNT_IF(CONTRACT_CARRIER_FULFILLED = FALSE) OVER (PARTITION BY CONTRACT_KEY, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS MISSED_LOADS_WEEKLY
    ,SUM(REVENUE) OVER (PARTITION BY CONTRACT_KEY, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS TOTAL_REVENUE_WEEKLY
    ,SUM(CASE WHEN CONTRACT_CARRIER_FULFILLED = TRUE THEN REVENUE END) OVER (PARTITION BY CONTRACT_KEY, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS EXECUTED_REVENUE_WEEKLY
    ,SUM(CASE WHEN CONTRACT_CARRIER_FULFILLED = FALSE THEN REVENUE END) OVER (PARTITION BY CONTRACT_KEY, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS MISSED_REVENUE_WEEKLY
    ,SUM(GP) OVER (PARTITION BY CONTRACT_KEY, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS TOTAL_GP_WEEKLY
    ,SUM(CASE WHEN CONTRACT_CARRIER_FULFILLED = TRUE THEN GP END) OVER (PARTITION BY CONTRACT_KEY, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS EXECUTED_GP_WEEKLY
    ,SUM(CASE WHEN CONTRACT_CARRIER_FULFILLED = FALSE THEN GP END) OVER (PARTITION BY CONTRACT_KEY, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS MISSED_GP_WEEKLY
    ,COUNT_IF(CONTRACT_CARRIER_FULFILLED = TRUE AND OTP = TRUE) OVER (PARTITION BY CONTRACT_KEY, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS OTP_WEEKLY
    ,COUNT_IF(CONTRACT_CARRIER_FULFILLED = TRUE AND OTD = TRUE) OVER (PARTITION BY CONTRACT_KEY, WEEK_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS OTD_WEEKLY
    ,CASE
      WHEN FREQUENCY = 'Weekly' AND TOTAL_LOADS_WEEKLY > VOLUME THEN DIV0(EXECUTED_LOADS_WEEKLY, VOLUME)
      WHEN FREQUENCY = 'Weekly' THEN DIV0(EXECUTED_LOADS_WEEKLY, TOTAL_LOADS_WEEKLY)
      WHEN FREQUENCY IN ('Quarterly') AND TOTAL_LOADS_WEEKLY > DIV0(VOLUME, COUNT_OF_WEEKS) THEN DIV0(EXECUTED_LOADS_WEEKLY, DIV0(VOLUME, COUNT_OF_WEEKS))
      WHEN FREQUENCY IN ('Quarterly') THEN DIV0(EXECUTED_LOADS_WEEKLY, TOTAL_LOADS_WEEKLY)
      ELSE NULL
      END AS PS_W
    ,CASE WHEN PS_W > 1 THEN 1 ELSE PS_W END AS WEEKLY_PERFORMANCE_SCORE
    ,CASE
      WHEN FREQUENCY IN ('Quarterly') AND TOTAL_LOADS_WEEKLY > DIV0(VOLUME, COUNT_OF_WEEKS) THEN DIV0(EXECUTED_LOADS_WEEKLY, DIV0(VOLUME, COUNT_OF_WEEKS))
      WHEN FREQUENCY IN ('Quarterly') THEN DIV0(EXECUTED_LOADS_WEEKLY, TOTAL_LOADS_WEEKLY)
      ELSE NULL
      END AS PS_QW
    ,CASE WHEN PS_QW > 1 THEN 1 ELSE PS_QW END AS QUARTERLY_WEEKLY_PERFORMANCE_SCORE

--MONTHLY
    ,COUNT(S_NUMBER) OVER (PARTITION BY CONTRACT_KEY, MONTH_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS TOTAL_LOADS_MONTHLY
    ,COUNT_IF(CONTRACT_CARRIER_FULFILLED = TRUE) OVER (PARTITION BY CONTRACT_KEY, MONTH_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS EXECUTED_LOADS_MONTHLY
    ,COUNT_IF(CONTRACT_CARRIER_FULFILLED = FALSE) OVER (PARTITION BY CONTRACT_KEY, MONTH_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS MISSED_LOADS_MONTHLY
    ,SUM(REVENUE) OVER (PARTITION BY CONTRACT_KEY, MONTH_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS TOTAL_REVENUE_MONTHLY
    ,SUM(CASE WHEN CONTRACT_CARRIER_FULFILLED = TRUE THEN REVENUE END) OVER (PARTITION BY CONTRACT_KEY, MONTH_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS EXECUTED_REVENUE_MONTHLY
    ,SUM(CASE WHEN CONTRACT_CARRIER_FULFILLED = FALSE THEN REVENUE END) OVER (PARTITION BY CONTRACT_KEY, MONTH_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS MISSED_REVENUE_MONTHLY
    ,SUM(GP) OVER (PARTITION BY CONTRACT_KEY, MONTH_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS TOTAL_GP_MONTHLY
    ,SUM(CASE WHEN CONTRACT_CARRIER_FULFILLED = TRUE THEN GP END) OVER (PARTITION BY CONTRACT_KEY, MONTH_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS EXECUTED_GP_MONTHLY
    ,SUM(CASE WHEN CONTRACT_CARRIER_FULFILLED = FALSE THEN GP END) OVER (PARTITION BY CONTRACT_KEY, MONTH_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS MISSED_GP_MONTHLY
    ,COUNT_IF(CONTRACT_CARRIER_FULFILLED = TRUE AND OTP = TRUE) OVER (PARTITION BY CONTRACT_KEY, MONTH_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS OTP_MONTHLY
    ,COUNT_IF(CONTRACT_CARRIER_FULFILLED = TRUE AND OTD = TRUE) OVER (PARTITION BY CONTRACT_KEY, MONTH_OF_PICKUPDATE, YEAR_OF_PICKUPDATE) AS OTD_MONTHLY
    ,CASE
      WHEN FREQUENCY = 'Monthly' AND TOTAL_LOADS_MONTHLY > VOLUME THEN DIV0(EXECUTED_LOADS_MONTHLY, VOLUME)
      WHEN FREQUENCY = 'Monthly' THEN DIV0(EXECUTED_LOADS_MONTHLY, TOTAL_LOADS_MONTHLY)
      WHEN FREQUENCY IN ('Total', 'Yearly', 'Quarterly') AND TOTAL_LOADS_MONTHLY > DIV0(VOLUME, COUNT_OF_MONTHS) THEN DIV0(EXECUTED_LOADS_MONTHLY, DIV0(VOLUME, COUNT_OF_MONTHS))
      WHEN FREQUENCY IN ('Total', 'Yearly', 'Quarterly') THEN DIV0(EXECUTED_LOADS_MONTHLY, TOTAL_LOADS_MONTHLY)
      ELSE NULL
      END AS PS_M
    ,CASE WHEN PS_M > 1 THEN 1 ELSE PS_M END AS MONTHLY_PERFORMANCE_SCORE


--EXECUTION CALCULATIONS BASED ON FREQUENCY
    ,CASE  
      WHEN FREQUENCY IN ('Total', 'Yearly', 'Quarterly') AND TOTAL_LOADS_MONTHLY > DIV0(VOLUME, COUNT_OF_MONTHS) THEN DIV0(EXECUTED_LOADS_MONTHLY, DIV0(VOLUME, COUNT_OF_MONTHS))
      WHEN FREQUENCY IN ('Total', 'Yearly', 'Quarterly') THEN DIV0(EXECUTED_LOADS_MONTHLY, TOTAL_LOADS_MONTHLY)
        --FOR TOTAL FREQ. TYPES WE CAN ALSO DIVIDE BY THE TOTAL_LOADS_TOTAL SO THEY ARE ONLY JUDGED ON WHAT HAS MATERIALIZED
      WHEN FREQUENCY = 'Monthly' AND TOTAL_LOADS_MONTHLY > VOLUME THEN DIV0(EXECUTED_LOADS_MONTHLY, VOLUME)
      WHEN FREQUENCY = 'Monthly' THEN DIV0(EXECUTED_LOADS_MONTHLY, TOTAL_LOADS_MONTHLY)
      WHEN FREQUENCY = 'Weekly' AND TOTAL_LOADS_WEEKLY > VOLUME THEN DIV0(EXECUTED_LOADS_WEEKLY, VOLUME)
      WHEN FREQUENCY = 'Weekly' THEN DIV0(EXECUTED_LOADS_WEEKLY, TOTAL_LOADS_WEEKLY)
      WHEN FREQUENCY = 'Daily' AND TOTAL_LOADS_DAILY > VOLUME THEN DIV0(EXECUTED_LOADS_DAILY, VOLUME)
      WHEN FREQUENCY = 'Daily' THEN DIV0(EXECUTED_LOADS_DAILY, TOTAL_LOADS_DAILY)
      ELSE NULL
      END AS PERIOD_CONTRACT_PERFORMANCE

--CAP ALL PERFORMANCE METRICS AT 100% (1)
    ,CASE
      WHEN PERIOD_CONTRACT_PERFORMANCE > 1 THEN 1
      ELSE PERIOD_CONTRACT_PERFORMANCE
      END AS CAPPED_PERIOD_CONTRACT_PERFORMANCE

--ADDITIONAL METRIC, NOT SURE WE NEED IT
    ,CASE
      WHEN TOTAL_LOADS_TOTAL > VOLUME THEN ROUND(DIV0(EXECUTED_LOADS_TOTAL, VOLUME),2)  -- MORE THAN EXPECTED VOLUME
      ELSE ROUND(DIV0(EXECUTED_LOADS_TOTAL, TOTAL_LOADS_TOTAL),2)  -- LESS THAN EXPECTED VOLUME
      END AS SIMPLE_OVERALL_CONTRACT_PERFORMANCE

--OTP/OTD CALCULATIONS BASED ON FREQUENCY
    ,CASE
      WHEN FREQUENCY IN ('Total', 'Yearly', 'Quarterly', 'Monthly') THEN DIV0(OTP_MONTHLY, EXECUTED_LOADS_MONTHLY)
      WHEN FREQUENCY IN ('Weekly') THEN DIV0(OTP_WEEKLY, EXECUTED_LOADS_WEEKLY)
      WHEN FREQUENCY IN ('Daily') THEN DIV0(OTP_DAILY, EXECUTED_LOADS_DAILY)
      ELSE NULL
      END AS PERIOD_OTP_PERCENTAGE
    ,CASE
      WHEN FREQUENCY IN ('Total', 'Yearly', 'Quarterly', 'Monthly') THEN DIV0(OTD_MONTHLY, EXECUTED_LOADS_MONTHLY)
      WHEN FREQUENCY IN ('Weekly') THEN DIV0(OTD_WEEKLY, EXECUTED_LOADS_WEEKLY)
      WHEN FREQUENCY IN ('Daily') THEN DIV0(OTD_DAILY, EXECUTED_LOADS_DAILY)
      ELSE NULL
      END AS PERIOD_OTD_PERCENTAGE

  FROM BASE
),

--DISTINCT LIST OF ALL CONTRACTS FOR BASIC INFORMATION AS WELL AS TO CAPTURE THOSE WITH ZERO MATERIALIZATION

CONTRACT_INFO AS (
  SELECT DISTINCT
     CONTRACT_KEY
    ,CONTRACT_DETAILS
    ,CONTRACT_TYPE
    ,CARRIER_OWNER
    ,REPORTING_NOTES
    ,LPD
    ,VOLUME
    ,FREQUENCY
    ,EFFECTIVE_CONTRACT_START_DATE
    ,EFFECTIVE_CONTRACT_END_DATE
    ,TERMINATED
    ,CONTRACT_TERMINATION_REASON_CODE
    ,NOTES AS MEG_NOTES
    ,CARRIER_RATE
    ,RATE_TYPE
    ,TOTAL_ESTIMATED_VOLUME
    ,TOTAL_ESTIMATED_REVENUE
    ,TOTAL_ESTIMATED_GP
    ,CONTRACT_SHIPPER_NAME
    ,MEG_CARRIER_NAME
    ,CONTRACT_LIVE AS CONTRACT_LIVE_TODAY
    ,CASE WHEN PCR.CURRENT_PC IS NULL THEN FALSE ELSE PCR.CURRENT_PC END AS IS_CURRENT_PC
    ,SCHEDULED_CONTRACT_START_DATE
    ,SCHEDULED_CONTRACT_END_DATE
  FROM ANALYTICS.SIGMA_WRITE.CONTRACT_EXECUTION_DATASET CED
  LEFT JOIN ANALYTICS.SIGMA_WRITE.PREMIER_CARRIER_RECORD PCR ON CED.MEG_CARRIER_DOT = PCR.PC_DOT
),

--FINAL JOINS AND ROUNDING

FINAL AS (
  SELECT
     BASECALCS.*
    ,CONTRACT_DETAILS
    ,CONTRACT_TYPE
    ,CARRIER_OWNER
    ,REPORTING_NOTES
    ,LPD
    ,TERMINATED
    ,CONTRACT_TERMINATION_REASON_CODE
    ,MEG_NOTES
    ,CARRIER_RATE
    ,RATE_TYPE
    ,TOTAL_ESTIMATED_VOLUME
    ,TOTAL_ESTIMATED_REVENUE
    ,TOTAL_ESTIMATED_GP
    ,CONTRACT_SHIPPER_NAME
    ,MEG_CARRIER_NAME
    ,CONTRACT_LIVE_TODAY
    ,IS_CURRENT_PC
    -- ,SCHEDULED_CONTRACT_START_DATE
    -- ,SCHEDULED_CONTRACT_END_DATE
    -- ,CEIL(DATEDIFF(WEEK, SCHEDULED_CONTRACT_START_DATE, SCHEDULED_CONTRACT_END_DATE), 0) AS COUNT_OF_SCHEDULED_WEEKS
    -- ,CEIL(MONTHS_BETWEEN(SCHEDULED_CONTRACT_END_DATE, SCHEDULED_CONTRACT_START_DATE), 0) AS COUNT_OF_SCHEDULED_MONTHS
  FROM BASECALCS
  LEFT JOIN CONTRACT_INFO ON CONTRACT_INFO.CONTRACT_KEY = BASECALCS.CONTRACT_KEY
)

SELECT *
FROM 
  -- BASE  -- SHIPMENT LEVEL INFO
  -- BASECALCS  -- SHIPMENT LEVEL INFO WITH WINDOWS FUNCTION AGGREGATIONS
  -- CONTRACT_INFO
  FINAL
  
WHERE 1=1
  -- AND CONTRACT_KEY = 'C11025627-2866732' -- YEARLY
  -- AND CONTRACT_KEY ='82DC919F-C8AA-4250-85A5-ADB52E6407D3-919149' -- TOTAL
  -- AND CONTRACT_KEY = 'C11063142-2475713'  -- QUARTERLY
  -- AND CONTRACT_KEY = 'C11056107-2890110' -- MONTHLY
  -- AND CONTRACT_KEY = 'C11021589-3099638' -- WEEKLY
  -- AND CONTRACT_KEY = 'C11074349-2115435' --DAILY
  
  -- AND CONTRACT_KEY = 'C8F2EC35-4A65-40A5-88FD-ACE5C903E450-75250' -- sage
  -- AND DAY_OF_PICKUPDATE = 18
  -- AND PICKUP_DATE = DATEFROMPARTS(2023,05,26)
